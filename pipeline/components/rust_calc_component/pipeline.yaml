# PIPELINE DEFINITION
# Name: multiply-numbers-pipeline
# Inputs:
#    num1: float
#    num2: float
# Outputs:
#    Output: float
components:
  comp-multiplytwonumbers:
    executorLabel: exec-multiplytwonumbers
    inputDefinitions:
      parameters:
        num1:
          parameterType: NUMBER_DOUBLE
        num2:
          parameterType: NUMBER_DOUBLE
    outputDefinitions:
      artifacts:
        result:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
  comp-parse-value:
    executorLabel: exec-parse-value
    inputDefinitions:
      artifacts:
        value_input:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
    outputDefinitions:
      parameters:
        value_output:
          parameterType: NUMBER_DOUBLE
deploymentSpec:
  executors:
    exec-multiplytwonumbers:
      container:
        command:
        - rus_calc
        - --num1
        - '{{$.inputs.parameters[''num1'']}}'
        - --num2
        - '{{$.inputs.parameters[''num2'']}}'
        - --output
        - '{{$.outputs.artifacts[''result''].path}}'
        image: localhost/rust_calc:latest
    exec-parse-value:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - parse_value
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.8.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef parse_value(value_input: Input[Artifact], value_output: OutputPath(float)):\n\
          \    # Read the content of the input file\n    with open(value_input.path,\
          \ 'r') as f:\n        value = float(f.read())\n\n    # Write the value to\
          \ the output file\n    with open(value_output, 'w') as f:\n        f.write(str(value))\n\
          \n"
        image: python:3.11-slim-bullseye
pipelineInfo:
  name: multiply-numbers-pipeline
root:
  dag:
    outputs:
      parameters:
        Output:
          valueFromParameter:
            outputParameterKey: value_output
            producerSubtask: parse-value
    tasks:
      multiplytwonumbers:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-multiplytwonumbers
        inputs:
          parameters:
            num1:
              componentInputParameter: num1
            num2:
              componentInputParameter: num2
        taskInfo:
          name: multiplytwonumbers
      parse-value:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-parse-value
        dependentTasks:
        - multiplytwonumbers
        inputs:
          artifacts:
            value_input:
              taskOutputArtifact:
                outputArtifactKey: result
                producerTask: multiplytwonumbers
        taskInfo:
          name: parse-value
  inputDefinitions:
    parameters:
      num1:
        parameterType: NUMBER_DOUBLE
      num2:
        parameterType: NUMBER_DOUBLE
  outputDefinitions:
    parameters:
      Output:
        parameterType: NUMBER_DOUBLE
schemaVersion: 2.1.0
sdkVersion: kfp-2.8.0
