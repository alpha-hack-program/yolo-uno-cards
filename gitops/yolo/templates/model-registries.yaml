---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: route-access
  namespace: {{ .Values.istioSystemNamespace }}          # Target namespace
rules:
- apiGroups: ["route.openshift.io"]
  resources: ["routes"]
  verbs: ["list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: route-access-binding
  namespace: {{ .Values.istioSystemNamespace }}          # Target namespace
subjects:
- kind: ServiceAccount
  name: pipeline-runner-dspa                             # Service account name
  namespace: {{ .Values.dataScienceProjectNamespace }}   # Project's Namespace
roleRef:
  kind: Role
  name: route-access                                     # Name of the Role created earlier
  apiGroup: rbac.authorization.k8s.io
# For each model registry, create a new Application resource
{{- range .Values.modelRegistries }}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ .name }}
  namespace: {{ $.Values.argocdNamespace }}                # ArgoCD namespace
  annotations:
    argocd.argoproj.io/compare-options: IgnoreExtraneous
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  project: default
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: {{ $.Values.dataScienceProjectNamespace }}  # Project's Namespace
  source:
    path: gitops/model-registry
    repoURL: https://github.com/alpha-hack-program/model-serving-utils.git
    targetRevision: main
    helm:
      values: |
        registry:
          name: {{ .name }}
        registryDb:
          databaseName: {{ .databaseName }}
          databaseUser: {{ .databaseUser }}
          databasePassword: {{ .databasePassword }}
  syncPolicy:
    automated:
      # prune: true
      selfHeal: true
{{- end }}